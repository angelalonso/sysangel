unbind-key C-b
set-option -g prefix M-w
bind-key M-w send-prefix

## Creating splits
bind n split-window -v
bind v split-window -h

## Moving between splits
# smart pane switching with awareness of vim splits, requires christoomey/vim-tmux-navigator on .vimrc
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind \ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
# These are less similar to my current vim's
#bind -n C-h if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-h" "select-pane -L"
#bind -n C-j if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-j" "select-pane -D"
#bind -n C-k if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-k" "select-pane -U"
#bind -n C-l if "[ $(tmux display -p '#{pane_current_command}') = vim  ]" "send-keys C-l" "select-pane -R"

## Resizing splits
bind -n M-h resize-pane -L 2
bind -n M-l resize-pane -R 2
bind -n M-k resize-pane -U 2
bind -n M-j resize-pane -D 2

## Creating window, moving between windows
bind M-t new-window
bind C-S-h previous-window
bind C-S-l next-window
