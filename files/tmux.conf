set -g default-terminal "screen-256color"
# BAR
set -g status-bg colour32
set -g status-fg colour231
set -g window-status-style bg=colour3,fg=colour124
set -g window-status-current-style bg=colour124,fg=colour3

unbind-key C-b
set-option -g prefix M-w
bind-key M-w send-prefix

set -sg escape-time 0

##MOUSE!
# remember to use shift for default mouse beaviour on select+copy and paste
set -g mouse on
set-option -s set-clipboard off

# These bindings are for X Windows only. If you're using a different
# window system you have to replace the `xsel` commands with something
# else. See https://github.com/tmux/tmux/wiki/Clipboard#available-tools
bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"
bind -T copy-mode    C-c send -X copy-pipe-no-clear "xclip -selection clipboard -i"
bind -T copy-mode-vi C-c send -X copy-pipe-no-clear "xclip -selection clipboard -i"


## Creating splits
bind n split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

## Moving between splits
# smart pane switching with awareness of vim splits, requires christoomey/vim-tmux-navigator on .vimrc
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind \ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

## Resizing splits
bind -n M-h resize-pane -L 2
bind -n M-l resize-pane -R 2
bind -n M-k resize-pane -U 2
bind -n M-j resize-pane -D 2

## Creating window, moving between windows
set -g base-index 1       # Start numbering windows at 1, not 0.
set -g pane-base-index 1  # Start numbering panes at 1, not 0.
bind -n M-t new-window -c '#{pane_current_path}'
bind -n C-h previous-window
bind -n C-l next-window
bind -n C-S-Left swap-window -t -1\; select-window -t -1
bind -n C-S-Right swap-window -t +1\; select-window -t +1

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_action 'copy-pipe-no-clear'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
