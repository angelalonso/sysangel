set nocompatible
set t_Co=256
" set termguicolors
" set background=dark  
" colorscheme base16-gruvbox-dark-hard
" colorscheme kuroi
" colorscheme atom-dark-256
colorscheme monokai_of_mine

let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

"-""filetype off
call plug#begin('~/.vim/plugged')
" Make sure you use single quotes

Plug 'BurntSushi/ripgrep'
Plug 'flazz/vim-colorschemes'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app & yarn install' }
Plug 'jiangmiao/auto-pairs'
Plug 'jreybert/vimagit'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'maxboisvert/vim-simple-complete'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'pedrohdz/vim-yaml-folds'
Plug 'prabirshrestha/async.vim'
Plug 'prabirshrestha/vim-lsp'
Plug 'prabirshrestha/asyncomplete.vim'
Plug 'prabirshrestha/asyncomplete-lsp.vim'
Plug 'prettier/vim-prettier'
Plug 'rust-lang/rust.vim'
Plug 'scrooloose/nerdtree'
Plug 'christoomey/vim-tmux-navigator'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'vimwiki/vimwiki'

call plug#end()"-" 
"-"  " To install:
"-"  " :PlugInstall
"-"  " vim +PluginInstall +qall

"-" " #### COC Plugins
let g:coc_global_extensions = ['coc-go', 'coc-json', 'coc-pyright', 'coc-rust-analyzer', 'coc-sh', 'coc-markdownlint']

"-" for terraform:
"   cd ~/.config/coc/extensions
"   git clone https://github.com/juliosueiras/terraform-lsp && cd terraform-lsp
"   GO111MODULE=on go mod download
"   make && make copy DST="$HOME/.local/bin"
if executable('terraform-lsp')
    au User lsp_setup call lsp#register_server({
        \ 'name': 'terraform-lsp',
        \ 'cmd': {server_info->['terraform-lsp', 'serve']},
        \ 'whitelist': ['terraform'],
        \ })
endif

filetype plugin indent on " required

"-" 
"-" " ####  FUNCTIONS
"-" 
"-" " Thanks https://github.com/tpope/vim-unimpaired but I just needed this
function! s:setup_paste() abort
  let s:paste = &paste
  let s:mouse = &mouse
  set paste
  set mouse=
  augroup unimpaired_paste
    autocmd!
    autocmd InsertLeave *
          \ if exists('s:paste') |
          \   let &paste = s:paste |
          \   let &mouse = s:mouse |
          \   unlet s:paste |
          \   unlet s:mouse |
          \ endif |
          \ autocmd! unimpaired_paste
  augroup END
endfunction
"-" 
"-" " ####  IDE
"-" 
syntax on
"-" 
set autoindent
"-" 
"-" " show line numbers
set number relativenumber
set nu rnu
"-" 
"-" " show matching brackets
set showmatch
"-" 
"-" " ####  ENCODING
"-" 
set encoding=utf-8
"-" 
"-" " make backspace work as expected
set backspace=2
"-" 
"-" " set tab indenting
set tabstop=2
set shiftwidth=2
"-" " make spaces feel like tabs
set softtabstop=2
"-" " expand tabs to spaces
set expandtab
"-" " CoC 
let b:coc_suggest_disable = 1

inoremap <silent><expr> <TAB> coc#pum#visible() ?  coc#pum#confirm() : "\<C-n>"
" " Rust
let g:rustfmt_autosave = 1
let g:rustfmt_emit_files = 1
let g:rustfmt_fail_silently = 0

"-" 
"-" 
"-" 
"-" " ####  SEARCH
"-" 
"-" " disregard case during search
set ignorecase
"-" 
"-" " highlight search results
set hlsearch
"-" 
"-" " wrap search
set wrapscan
"-" 
"-" " highlight line containing caret
set cursorline
set cursorcolumn
"-" 
"-" 
"-" " #### VIMWIKI
"-" 
let g:vimwiki_list = [{'path': '$HOME/Software/Dev/wiki'}]
"-" 
"-" " ####  MAP KEYS
"-" 
let mapleader = " " " map leader to Space
"-" 
map <leader>h :noh<CR>
"-" 
"-" Buffers
map <leader>n :bn<cr>
map <leader>p :bp<cr>
map <leader>d :bd<cr>  
"-" NerdTree
map <leader>t :NERDTreeToggle<CR>
" Automatically close NERDTree when you open a file
let NERDTreeQuitOnOpen=1
"-" 
"-" " unimpaired mapping for set paste
nnoremap <silent> yo  :call <SID>setup_paste()<CR>o
nnoremap <silent> yO :call <SID>setup_paste()<CR>O
nnoremap <silent> yi  :call <SID>setup_paste()<CR>i
nnoremap <silent> yI :call <SID>setup_paste()<CR>I
nnoremap <silent> ya  :call <SID>setup_paste()<CR>a
nnoremap <silent> yA :call <SID>setup_paste()<CR>A
"-" 
"-" 
"-" " No arrows
nnoremap <Left> :echo "No left for you!"<CR>
vnoremap <Left> :<C-u>echo "No left for you!"<CR>
nnoremap <Right> :echo "No Right for you!"<CR>
vnoremap <Right> :<C-u>echo "No Right for you!"<CR>
nnoremap <Up> :echo "No Up for you!"<CR>
vnoremap <Up> :<C-u>echo "No Up for you!"<CR>
nnoremap <Down> :echo "No Down for you!"<CR>
vnoremap <Down> :<C-u>echo "No Down for you!"<CR>

"-" " Exit insert mode on the correct character (not confusing i and a)
"-" "http://stackoverflow.com/questions/2295410/prevent-cursor-from-moving-back-one-character-on-insert-mode-exit
:inoremap <silent> <Esc> <Esc>`^
"-" 
"-" 
"-" " Powerline configs 
let g:airline_powerline_fonts = 1
set laststatus=2
set ttimeoutlen=50

" .............................................................................
" iamcco/markdown-preview.nvim
" .............................................................................

let g:mkdp_auto_close=0
let g:mkdp_refresh_slow=1
let g:mkdp_markdown_css='/home/aaf/.local/lib/github-markdown.css'
